#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class MyProjectDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertlogindetail(logindetail instance);
  partial void Updatelogindetail(logindetail instance);
  partial void Deletelogindetail(logindetail instance);
  partial void InsertImageDetail(ImageDetail instance);
  partial void UpdateImageDetail(ImageDetail instance);
  partial void DeleteImageDetail(ImageDetail instance);
  partial void InsertMsgdetail(Msgdetail instance);
  partial void UpdateMsgdetail(Msgdetail instance);
  partial void DeleteMsgdetail(Msgdetail instance);
  partial void InsertHostingLogin(HostingLogin instance);
  partial void UpdateHostingLogin(HostingLogin instance);
  partial void DeleteHostingLogin(HostingLogin instance);
  partial void InsertHostLoginStatus(HostLoginStatus instance);
  partial void UpdateHostLoginStatus(HostLoginStatus instance);
  partial void DeleteHostLoginStatus(HostLoginStatus instance);
  partial void InsertMembership(Membership instance);
  partial void UpdateMembership(Membership instance);
  partial void DeleteMembership(Membership instance);
  partial void InsertRegistration(Registration instance);
  partial void UpdateRegistration(Registration instance);
  partial void DeleteRegistration(Registration instance);
  partial void Insertaspnet_Application(aspnet_Application instance);
  partial void Updateaspnet_Application(aspnet_Application instance);
  partial void Deleteaspnet_Application(aspnet_Application instance);
  partial void Insertaspnet_Membership(aspnet_Membership instance);
  partial void Updateaspnet_Membership(aspnet_Membership instance);
  partial void Deleteaspnet_Membership(aspnet_Membership instance);
  partial void Insertaspnet_Path(aspnet_Path instance);
  partial void Updateaspnet_Path(aspnet_Path instance);
  partial void Deleteaspnet_Path(aspnet_Path instance);
  partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Insertaspnet_Profile(aspnet_Profile instance);
  partial void Updateaspnet_Profile(aspnet_Profile instance);
  partial void Deleteaspnet_Profile(aspnet_Profile instance);
  partial void Insertaspnet_Role(aspnet_Role instance);
  partial void Updateaspnet_Role(aspnet_Role instance);
  partial void Deleteaspnet_Role(aspnet_Role instance);
  partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void InsertBodyContent(BodyContent instance);
  partial void UpdateBodyContent(BodyContent instance);
  partial void DeleteBodyContent(BodyContent instance);
  partial void InsertPage(Page instance);
  partial void UpdatePage(Page instance);
  partial void DeletePage(Page instance);
  partial void InsertSubPage(SubPage instance);
  partial void UpdateSubPage(SubPage instance);
  partial void DeleteSubPage(SubPage instance);
  partial void InsertAdminProfile(AdminProfile instance);
  partial void UpdateAdminProfile(AdminProfile instance);
  partial void DeleteAdminProfile(AdminProfile instance);
  partial void InsertSiteUser(SiteUser instance);
  partial void UpdateSiteUser(SiteUser instance);
  partial void DeleteSiteUser(SiteUser instance);
  partial void InsertActivateUser(ActivateUser instance);
  partial void UpdateActivateUser(ActivateUser instance);
  partial void DeleteActivateUser(ActivateUser instance);
  #endregion
	
	public MyProjectDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MyProjectDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyProjectDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyProjectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyProjectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<logindetail> logindetails
	{
		get
		{
			return this.GetTable<logindetail>();
		}
	}
	
	public System.Data.Linq.Table<ImageDetail> ImageDetails
	{
		get
		{
			return this.GetTable<ImageDetail>();
		}
	}
	
	public System.Data.Linq.Table<Msgdetail> Msgdetails
	{
		get
		{
			return this.GetTable<Msgdetail>();
		}
	}
	
	public System.Data.Linq.Table<HostingLogin> HostingLogins
	{
		get
		{
			return this.GetTable<HostingLogin>();
		}
	}
	
	public System.Data.Linq.Table<HostLoginStatus> HostLoginStatus
	{
		get
		{
			return this.GetTable<HostLoginStatus>();
		}
	}
	
	public System.Data.Linq.Table<Membership> Memberships
	{
		get
		{
			return this.GetTable<Membership>();
		}
	}
	
	public System.Data.Linq.Table<Registration> Registrations
	{
		get
		{
			return this.GetTable<Registration>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
	{
		get
		{
			return this.GetTable<aspnet_Application>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this.GetTable<aspnet_Membership>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this.GetTable<aspnet_Path>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationAllUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationPerUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
	{
		get
		{
			return this.GetTable<aspnet_Profile>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this.GetTable<aspnet_Role>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
	{
		get
		{
			return this.GetTable<aspnet_SchemaVersion>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this.GetTable<aspnet_UsersInRole>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
	{
		get
		{
			return this.GetTable<aspnet_WebEvent_Event>();
		}
	}
	
	public System.Data.Linq.Table<BodyContent> BodyContents
	{
		get
		{
			return this.GetTable<BodyContent>();
		}
	}
	
	public System.Data.Linq.Table<Page> Pages
	{
		get
		{
			return this.GetTable<Page>();
		}
	}
	
	public System.Data.Linq.Table<SubPage> SubPages
	{
		get
		{
			return this.GetTable<SubPage>();
		}
	}
	
	public System.Data.Linq.Table<AdminProfile> AdminProfiles
	{
		get
		{
			return this.GetTable<AdminProfile>();
		}
	}
	
	public System.Data.Linq.Table<SiteUser> SiteUsers
	{
		get
		{
			return this.GetTable<SiteUser>();
		}
	}
	
	public System.Data.Linq.Table<ActivateUser> ActivateUsers
	{
		get
		{
			return this.GetTable<ActivateUser>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_retrieve_second_row")]
	public ISingleResult<proc_retrieve_second_rowResult> proc_retrieve_second_row()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proc_retrieve_second_rowResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logindetail")]
public partial class logindetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _email;
	
	private string _password;
	
	private string _s_ques;
	
	private string _s_ans;
	
	private string _name;
	
	private string _u_type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Ons_quesChanging(string value);
    partial void Ons_quesChanged();
    partial void Ons_ansChanging(string value);
    partial void Ons_ansChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onu_typeChanging(string value);
    partial void Onu_typeChanged();
    #endregion
	
	public logindetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_ques", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string s_ques
	{
		get
		{
			return this._s_ques;
		}
		set
		{
			if ((this._s_ques != value))
			{
				this.Ons_quesChanging(value);
				this.SendPropertyChanging();
				this._s_ques = value;
				this.SendPropertyChanged("s_ques");
				this.Ons_quesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_ans", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string s_ans
	{
		get
		{
			return this._s_ans;
		}
		set
		{
			if ((this._s_ans != value))
			{
				this.Ons_ansChanging(value);
				this.SendPropertyChanging();
				this._s_ans = value;
				this.SendPropertyChanged("s_ans");
				this.Ons_ansChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string u_type
	{
		get
		{
			return this._u_type;
		}
		set
		{
			if ((this._u_type != value))
			{
				this.Onu_typeChanging(value);
				this.SendPropertyChanging();
				this._u_type = value;
				this.SendPropertyChanged("u_type");
				this.Onu_typeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImageDetail")]
public partial class ImageDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Imageid;
	
	private string _UserID;
	
	private string _Imagename;
	
	private string _ImagePath;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageidChanging(int value);
    partial void OnImageidChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnImagenameChanging(string value);
    partial void OnImagenameChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
	
	public ImageDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imageid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Imageid
	{
		get
		{
			return this._Imageid;
		}
		set
		{
			if ((this._Imageid != value))
			{
				this.OnImageidChanging(value);
				this.SendPropertyChanging();
				this._Imageid = value;
				this.SendPropertyChanged("Imageid");
				this.OnImageidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagename", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Imagename
	{
		get
		{
			return this._Imagename;
		}
		set
		{
			if ((this._Imagename != value))
			{
				this.OnImagenameChanging(value);
				this.SendPropertyChanging();
				this._Imagename = value;
				this.SendPropertyChanged("Imagename");
				this.OnImagenameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ImagePath
	{
		get
		{
			return this._ImagePath;
		}
		set
		{
			if ((this._ImagePath != value))
			{
				this.OnImagePathChanging(value);
				this.SendPropertyChanging();
				this._ImagePath = value;
				this.SendPropertyChanged("ImagePath");
				this.OnImagePathChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Msgdetail")]
public partial class Msgdetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _msgid;
	
	private string _sender1;
	
	private string _rece;
	
	private string _subject;
	
	private string _message;
	
	private string _attachment;
	
	private string _date1;
	
	private string _Time1;
	
	private string _draft;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsgidChanging(int value);
    partial void OnmsgidChanged();
    partial void Onsender1Changing(string value);
    partial void Onsender1Changed();
    partial void OnreceChanging(string value);
    partial void OnreceChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnattachmentChanging(string value);
    partial void OnattachmentChanged();
    partial void Ondate1Changing(string value);
    partial void Ondate1Changed();
    partial void OnTime1Changing(string value);
    partial void OnTime1Changed();
    partial void OndraftChanging(string value);
    partial void OndraftChanged();
    #endregion
	
	public Msgdetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int msgid
	{
		get
		{
			return this._msgid;
		}
		set
		{
			if ((this._msgid != value))
			{
				this.OnmsgidChanging(value);
				this.SendPropertyChanging();
				this._msgid = value;
				this.SendPropertyChanged("msgid");
				this.OnmsgidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string sender1
	{
		get
		{
			return this._sender1;
		}
		set
		{
			if ((this._sender1 != value))
			{
				this.Onsender1Changing(value);
				this.SendPropertyChanging();
				this._sender1 = value;
				this.SendPropertyChanged("sender1");
				this.Onsender1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rece", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string rece
	{
		get
		{
			return this._rece;
		}
		set
		{
			if ((this._rece != value))
			{
				this.OnreceChanging(value);
				this.SendPropertyChanging();
				this._rece = value;
				this.SendPropertyChanged("rece");
				this.OnreceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
	public string subject
	{
		get
		{
			return this._subject;
		}
		set
		{
			if ((this._subject != value))
			{
				this.OnsubjectChanging(value);
				this.SendPropertyChanging();
				this._subject = value;
				this.SendPropertyChanged("subject");
				this.OnsubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string message
	{
		get
		{
			return this._message;
		}
		set
		{
			if ((this._message != value))
			{
				this.OnmessageChanging(value);
				this.SendPropertyChanging();
				this._message = value;
				this.SendPropertyChanged("message");
				this.OnmessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachment", DbType="VarChar(50)")]
	public string attachment
	{
		get
		{
			return this._attachment;
		}
		set
		{
			if ((this._attachment != value))
			{
				this.OnattachmentChanging(value);
				this.SendPropertyChanging();
				this._attachment = value;
				this.SendPropertyChanged("attachment");
				this.OnattachmentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string date1
	{
		get
		{
			return this._date1;
		}
		set
		{
			if ((this._date1 != value))
			{
				this.Ondate1Changing(value);
				this.SendPropertyChanging();
				this._date1 = value;
				this.SendPropertyChanged("date1");
				this.Ondate1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Time1
	{
		get
		{
			return this._Time1;
		}
		set
		{
			if ((this._Time1 != value))
			{
				this.OnTime1Changing(value);
				this.SendPropertyChanging();
				this._Time1 = value;
				this.SendPropertyChanged("Time1");
				this.OnTime1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_draft", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string draft
	{
		get
		{
			return this._draft;
		}
		set
		{
			if ((this._draft != value))
			{
				this.OndraftChanging(value);
				this.SendPropertyChanging();
				this._draft = value;
				this.SendPropertyChanged("draft");
				this.OndraftChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HostingLogin")]
public partial class HostingLogin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _UserName;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _DomainName;
	
	private string _Email;
	
	private string _ServerName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    #endregion
	
	public HostingLogin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="VarChar(200)")]
	public string DomainName
	{
		get
		{
			return this._DomainName;
		}
		set
		{
			if ((this._DomainName != value))
			{
				this.OnDomainNameChanging(value);
				this.SendPropertyChanging();
				this._DomainName = value;
				this.SendPropertyChanged("DomainName");
				this.OnDomainNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="VarChar(100)")]
	public string ServerName
	{
		get
		{
			return this._ServerName;
		}
		set
		{
			if ((this._ServerName != value))
			{
				this.OnServerNameChanging(value);
				this.SendPropertyChanging();
				this._ServerName = value;
				this.SendPropertyChanged("ServerName");
				this.OnServerNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HostLoginStatus")]
public partial class HostLoginStatus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _UserName;
	
	private string _LastLoginIP;
	
	private string _StartTime;
	
	private string _EndTime;
	
	private string _TimeDuration;
	
	private string _Date;
	
	private string _Email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLastLoginIPChanging(string value);
    partial void OnLastLoginIPChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnTimeDurationChanging(string value);
    partial void OnTimeDurationChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public HostLoginStatus()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIP", DbType="VarChar(100)")]
	public string LastLoginIP
	{
		get
		{
			return this._LastLoginIP;
		}
		set
		{
			if ((this._LastLoginIP != value))
			{
				this.OnLastLoginIPChanging(value);
				this.SendPropertyChanging();
				this._LastLoginIP = value;
				this.SendPropertyChanged("LastLoginIP");
				this.OnLastLoginIPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(100)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(100)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="VarChar(100)")]
	public string TimeDuration
	{
		get
		{
			return this._TimeDuration;
		}
		set
		{
			if ((this._TimeDuration != value))
			{
				this.OnTimeDurationChanging(value);
				this.SendPropertyChanging();
				this._TimeDuration = value;
				this.SendPropertyChanged("TimeDuration");
				this.OnTimeDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memberships")]
public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserId;
	
	private string _Password;
	
	private System.Nullable<int> _PasswordFailedAttempt;
	
	private string _Role;
	
	private System.Nullable<int> _isSuperAdmin;
	
	private System.Nullable<int> _isRejected;
	
	private EntitySet<Registration> _Registrations;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFailedAttemptChanging(System.Nullable<int> value);
    partial void OnPasswordFailedAttemptChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnisSuperAdminChanging(System.Nullable<int> value);
    partial void OnisSuperAdminChanged();
    partial void OnisRejectedChanging(System.Nullable<int> value);
    partial void OnisRejectedChanged();
    #endregion
	
	public Membership()
	{
		this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailedAttempt", DbType="Int")]
	public System.Nullable<int> PasswordFailedAttempt
	{
		get
		{
			return this._PasswordFailedAttempt;
		}
		set
		{
			if ((this._PasswordFailedAttempt != value))
			{
				this.OnPasswordFailedAttemptChanging(value);
				this.SendPropertyChanging();
				this._PasswordFailedAttempt = value;
				this.SendPropertyChanged("PasswordFailedAttempt");
				this.OnPasswordFailedAttemptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(50)")]
	public string Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this.OnRoleChanging(value);
				this.SendPropertyChanging();
				this._Role = value;
				this.SendPropertyChanged("Role");
				this.OnRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSuperAdmin", DbType="Int")]
	public System.Nullable<int> isSuperAdmin
	{
		get
		{
			return this._isSuperAdmin;
		}
		set
		{
			if ((this._isSuperAdmin != value))
			{
				this.OnisSuperAdminChanging(value);
				this.SendPropertyChanging();
				this._isSuperAdmin = value;
				this.SendPropertyChanged("isSuperAdmin");
				this.OnisSuperAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRejected", DbType="Int")]
	public System.Nullable<int> isRejected
	{
		get
		{
			return this._isRejected;
		}
		set
		{
			if ((this._isRejected != value))
			{
				this.OnisRejectedChanging(value);
				this.SendPropertyChanging();
				this._isRejected = value;
				this.SendPropertyChanged("isRejected");
				this.OnisRejectedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_Registration", Storage="_Registrations", ThisKey="UserId", OtherKey="GuidId")]
	public EntitySet<Registration> Registrations
	{
		get
		{
			return this._Registrations;
		}
		set
		{
			this._Registrations.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Registrations(Registration entity)
	{
		this.SendPropertyChanging();
		entity.Membership = this;
	}
	
	private void detach_Registrations(Registration entity)
	{
		this.SendPropertyChanging();
		entity.Membership = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserId;
	
	private string _GuidId;
	
	private string _email;
	
	private string _name;
	
	private string _gender;
	
	private string _a_ques;
	
	private string _s_ans;
	
	private string _dob;
	
	private string _mobile;
	
	private string _country;
	
	private string _city;
	
	private string _address;
	
	private string _DateTime;
	
	private EntityRef<Membership> _Membership;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnGuidIdChanging(string value);
    partial void OnGuidIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Ona_quesChanging(string value);
    partial void Ona_quesChanged();
    partial void Ons_ansChanging(string value);
    partial void Ons_ansChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnDateTimeChanging(string value);
    partial void OnDateTimeChanged();
    #endregion
	
	public Registration()
	{
		this._Membership = default(EntityRef<Membership>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuidId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string GuidId
	{
		get
		{
			return this._GuidId;
		}
		set
		{
			if ((this._GuidId != value))
			{
				if (this._Membership.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGuidIdChanging(value);
				this.SendPropertyChanging();
				this._GuidId = value;
				this.SendPropertyChanged("GuidId");
				this.OnGuidIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_ques", DbType="VarChar(MAX)")]
	public string a_ques
	{
		get
		{
			return this._a_ques;
		}
		set
		{
			if ((this._a_ques != value))
			{
				this.Ona_quesChanging(value);
				this.SendPropertyChanging();
				this._a_ques = value;
				this.SendPropertyChanged("a_ques");
				this.Ona_quesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_ans", DbType="VarChar(50)")]
	public string s_ans
	{
		get
		{
			return this._s_ans;
		}
		set
		{
			if ((this._s_ans != value))
			{
				this.Ons_ansChanging(value);
				this.SendPropertyChanging();
				this._s_ans = value;
				this.SendPropertyChanged("s_ans");
				this.Ons_ansChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="VarChar(50)")]
	public string dob
	{
		get
		{
			return this._dob;
		}
		set
		{
			if ((this._dob != value))
			{
				this.OndobChanging(value);
				this.SendPropertyChanging();
				this._dob = value;
				this.SendPropertyChanged("dob");
				this.OndobChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="VarChar(15)")]
	public string mobile
	{
		get
		{
			return this._mobile;
		}
		set
		{
			if ((this._mobile != value))
			{
				this.OnmobileChanging(value);
				this.SendPropertyChanging();
				this._mobile = value;
				this.SendPropertyChanged("mobile");
				this.OnmobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(50)")]
	public string country
	{
		get
		{
			return this._country;
		}
		set
		{
			if ((this._country != value))
			{
				this.OncountryChanging(value);
				this.SendPropertyChanging();
				this._country = value;
				this.SendPropertyChanged("country");
				this.OncountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX)")]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="VarChar(50)")]
	public string DateTime
	{
		get
		{
			return this._DateTime;
		}
		set
		{
			if ((this._DateTime != value))
			{
				this.OnDateTimeChanging(value);
				this.SendPropertyChanging();
				this._DateTime = value;
				this.SendPropertyChanged("DateTime");
				this.OnDateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_Registration", Storage="_Membership", ThisKey="GuidId", OtherKey="UserId", IsForeignKey=true)]
	public Membership Membership
	{
		get
		{
			return this._Membership.Entity;
		}
		set
		{
			Membership previousValue = this._Membership.Entity;
			if (((previousValue != value) 
						|| (this._Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Membership.Entity = null;
					previousValue.Registrations.Remove(this);
				}
				this._Membership.Entity = value;
				if ((value != null))
				{
					value.Registrations.Add(this);
					this._GuidId = value.UserId;
				}
				else
				{
					this._GuidId = default(string);
				}
				this.SendPropertyChanged("Membership");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ApplicationName;
	
	private string _LoweredApplicationName;
	
	private System.Guid _ApplicationId;
	
	private string _Description;
	
	private EntitySet<aspnet_Membership> _aspnet_Memberships;
	
	private EntitySet<aspnet_Path> _aspnet_Paths;
	
	private EntitySet<aspnet_Role> _aspnet_Roles;
	
	private EntitySet<aspnet_User> _aspnet_Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Application()
	{
		this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
		this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
		this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
		this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string ApplicationName
	{
		get
		{
			return this._ApplicationName;
		}
		set
		{
			if ((this._ApplicationName != value))
			{
				this.OnApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._ApplicationName = value;
				this.SendPropertyChanged("ApplicationName");
				this.OnApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredApplicationName
	{
		get
		{
			return this._LoweredApplicationName;
		}
		set
		{
			if ((this._LoweredApplicationName != value))
			{
				this.OnLoweredApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredApplicationName = value;
				this.SendPropertyChanged("LoweredApplicationName");
				this.OnLoweredApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this._aspnet_Memberships;
		}
		set
		{
			this._aspnet_Memberships.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this._aspnet_Paths;
		}
		set
		{
			this._aspnet_Paths.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this._aspnet_Roles;
		}
		set
		{
			this._aspnet_Roles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_User> aspnet_Users
	{
		get
		{
			return this._aspnet_Users;
		}
		set
		{
			this._aspnet_Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _Password;
	
	private int _PasswordFormat;
	
	private string _PasswordSalt;
	
	private string _MobilePIN;
	
	private string _Email;
	
	private string _LoweredEmail;
	
	private string _PasswordQuestion;
	
	private string _PasswordAnswer;
	
	private bool _IsApproved;
	
	private bool _IsLockedOut;
	
	private System.DateTime _CreateDate;
	
	private System.DateTime _LastLoginDate;
	
	private System.DateTime _LastPasswordChangedDate;
	
	private System.DateTime _LastLockoutDate;
	
	private int _FailedPasswordAttemptCount;
	
	private System.DateTime _FailedPasswordAttemptWindowStart;
	
	private int _FailedPasswordAnswerAttemptCount;
	
	private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
	
	private string _Comment;
	
	private EntitySet<BodyContent> _BodyContents;
	
	private EntitySet<AdminProfile> _AdminProfiles;
	
	private EntitySet<SiteUser> _SiteUsers;
	
	private EntitySet<ActivateUser> _ActivateUsers;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public aspnet_Membership()
	{
		this._BodyContents = new EntitySet<BodyContent>(new Action<BodyContent>(this.attach_BodyContents), new Action<BodyContent>(this.detach_BodyContents));
		this._AdminProfiles = new EntitySet<AdminProfile>(new Action<AdminProfile>(this.attach_AdminProfiles), new Action<AdminProfile>(this.detach_AdminProfiles));
		this._SiteUsers = new EntitySet<SiteUser>(new Action<SiteUser>(this.attach_SiteUsers), new Action<SiteUser>(this.detach_SiteUsers));
		this._ActivateUsers = new EntitySet<ActivateUser>(new Action<ActivateUser>(this.attach_ActivateUsers), new Action<ActivateUser>(this.detach_ActivateUsers));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
	public int PasswordFormat
	{
		get
		{
			return this._PasswordFormat;
		}
		set
		{
			if ((this._PasswordFormat != value))
			{
				this.OnPasswordFormatChanging(value);
				this.SendPropertyChanging();
				this._PasswordFormat = value;
				this.SendPropertyChanged("PasswordFormat");
				this.OnPasswordFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
	public string MobilePIN
	{
		get
		{
			return this._MobilePIN;
		}
		set
		{
			if ((this._MobilePIN != value))
			{
				this.OnMobilePINChanging(value);
				this.SendPropertyChanging();
				this._MobilePIN = value;
				this.SendPropertyChanged("MobilePIN");
				this.OnMobilePINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
	public string LoweredEmail
	{
		get
		{
			return this._LoweredEmail;
		}
		set
		{
			if ((this._LoweredEmail != value))
			{
				this.OnLoweredEmailChanging(value);
				this.SendPropertyChanging();
				this._LoweredEmail = value;
				this.SendPropertyChanged("LoweredEmail");
				this.OnLoweredEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
	public string PasswordQuestion
	{
		get
		{
			return this._PasswordQuestion;
		}
		set
		{
			if ((this._PasswordQuestion != value))
			{
				this.OnPasswordQuestionChanging(value);
				this.SendPropertyChanging();
				this._PasswordQuestion = value;
				this.SendPropertyChanged("PasswordQuestion");
				this.OnPasswordQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
	public string PasswordAnswer
	{
		get
		{
			return this._PasswordAnswer;
		}
		set
		{
			if ((this._PasswordAnswer != value))
			{
				this.OnPasswordAnswerChanging(value);
				this.SendPropertyChanging();
				this._PasswordAnswer = value;
				this.SendPropertyChanged("PasswordAnswer");
				this.OnPasswordAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
	public bool IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
	public bool IsLockedOut
	{
		get
		{
			return this._IsLockedOut;
		}
		set
		{
			if ((this._IsLockedOut != value))
			{
				this.OnIsLockedOutChanging(value);
				this.SendPropertyChanging();
				this._IsLockedOut = value;
				this.SendPropertyChanged("IsLockedOut");
				this.OnIsLockedOutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLoginDate
	{
		get
		{
			return this._LastLoginDate;
		}
		set
		{
			if ((this._LastLoginDate != value))
			{
				this.OnLastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDate = value;
				this.SendPropertyChanged("LastLoginDate");
				this.OnLastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastPasswordChangedDate
	{
		get
		{
			return this._LastPasswordChangedDate;
		}
		set
		{
			if ((this._LastPasswordChangedDate != value))
			{
				this.OnLastPasswordChangedDateChanging(value);
				this.SendPropertyChanging();
				this._LastPasswordChangedDate = value;
				this.SendPropertyChanged("LastPasswordChangedDate");
				this.OnLastPasswordChangedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLockoutDate
	{
		get
		{
			return this._LastLockoutDate;
		}
		set
		{
			if ((this._LastLockoutDate != value))
			{
				this.OnLastLockoutDateChanging(value);
				this.SendPropertyChanging();
				this._LastLockoutDate = value;
				this.SendPropertyChanged("LastLockoutDate");
				this.OnLastLockoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAttemptCount
	{
		get
		{
			return this._FailedPasswordAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAttemptCount != value))
			{
				this.OnFailedPasswordAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAttemptCount");
				this.OnFailedPasswordAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAttemptWindowStart != value))
			{
				this.OnFailedPasswordAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
				this.OnFailedPasswordAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAnswerAttemptCount
	{
		get
		{
			return this._FailedPasswordAnswerAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptCount != value))
			{
				this.OnFailedPasswordAnswerAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
				this.OnFailedPasswordAnswerAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAnswerAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAnswerAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptWindowStart != value))
			{
				this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
				this.OnFailedPasswordAnswerAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_BodyContent", Storage="_BodyContents", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<BodyContent> BodyContents
	{
		get
		{
			return this._BodyContents;
		}
		set
		{
			this._BodyContents.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_AdminProfile", Storage="_AdminProfiles", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<AdminProfile> AdminProfiles
	{
		get
		{
			return this._AdminProfiles;
		}
		set
		{
			this._AdminProfiles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_SiteUser", Storage="_SiteUsers", ThisKey="UserId", OtherKey="CreatorId")]
	public EntitySet<SiteUser> SiteUsers
	{
		get
		{
			return this._SiteUsers;
		}
		set
		{
			this._SiteUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_ActivateUser", Storage="_ActivateUsers", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<ActivateUser> ActivateUsers
	{
		get
		{
			return this._ActivateUsers;
		}
		set
		{
			this._ActivateUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Memberships.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Memberships.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Membership = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Membership = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BodyContents(BodyContent entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = this;
	}
	
	private void detach_BodyContents(BodyContent entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = null;
	}
	
	private void attach_AdminProfiles(AdminProfile entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = this;
	}
	
	private void detach_AdminProfiles(AdminProfile entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = null;
	}
	
	private void attach_SiteUsers(SiteUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = this;
	}
	
	private void detach_SiteUsers(SiteUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = null;
	}
	
	private void attach_ActivateUsers(ActivateUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = this;
	}
	
	private void detach_ActivateUsers(ActivateUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Membership = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _PathId;
	
	private string _Path;
	
	private string _LoweredPath;
	
	private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
	
	public aspnet_Path()
	{
		this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredPath
	{
		get
		{
			return this._LoweredPath;
		}
		set
		{
			if ((this._LoweredPath != value))
			{
				this.OnLoweredPathChanging(value);
				this.SendPropertyChanging();
				this._LoweredPath = value;
				this.SendPropertyChanged("LoweredPath");
				this.OnLoweredPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
	public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
	{
		get
		{
			return this._aspnet_PersonalizationAllUser.Entity;
		}
		set
		{
			aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_PersonalizationAllUser.Entity = null;
					previousValue.aspnet_Path = null;
				}
				this._aspnet_PersonalizationAllUser.Entity = value;
				if ((value != null))
				{
					value.aspnet_Path = this;
				}
				this.SendPropertyChanged("aspnet_PersonalizationAllUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Paths.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Paths.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _PathId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationAllUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationAllUser = null;
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationAllUser = this;
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Nullable<System.Guid> _PathId;
	
	private System.Nullable<System.Guid> _UserId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationPerUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private string _PropertyNames;
	
	private string _PropertyValuesString;
	
	private System.Data.Linq.Binary _PropertyValuesBinary;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_Profile()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyNames
	{
		get
		{
			return this._PropertyNames;
		}
		set
		{
			if ((this._PropertyNames != value))
			{
				this.OnPropertyNamesChanging(value);
				this.SendPropertyChanging();
				this._PropertyNames = value;
				this.SendPropertyChanged("PropertyNames");
				this.OnPropertyNamesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyValuesString
	{
		get
		{
			return this._PropertyValuesString;
		}
		set
		{
			if ((this._PropertyValuesString != value))
			{
				this.OnPropertyValuesStringChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesString = value;
				this.SendPropertyChanged("PropertyValuesString");
				this.OnPropertyValuesStringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PropertyValuesBinary
	{
		get
		{
			return this._PropertyValuesBinary;
		}
		set
		{
			if ((this._PropertyValuesBinary != value))
			{
				this.OnPropertyValuesBinaryChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesBinary = value;
				this.SendPropertyChanged("PropertyValuesBinary");
				this.OnPropertyValuesBinaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Profile = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Profile = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _RoleId;
	
	private string _RoleName;
	
	private string _LoweredRoleName;
	
	private string _Description;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Role()
	{
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredRoleName
	{
		get
		{
			return this._LoweredRoleName;
		}
		set
		{
			if ((this._LoweredRoleName != value))
			{
				this.OnLoweredRoleNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredRoleName = value;
				this.SendPropertyChanged("LoweredRoleName");
				this.OnLoweredRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Roles.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Roles.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Feature;
	
	private string _CompatibleSchemaVersion;
	
	private bool _IsCurrentVersion;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
	
	public aspnet_SchemaVersion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CompatibleSchemaVersion
	{
		get
		{
			return this._CompatibleSchemaVersion;
		}
		set
		{
			if ((this._CompatibleSchemaVersion != value))
			{
				this.OnCompatibleSchemaVersionChanging(value);
				this.SendPropertyChanging();
				this._CompatibleSchemaVersion = value;
				this.SendPropertyChanged("CompatibleSchemaVersion");
				this.OnCompatibleSchemaVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
	public bool IsCurrentVersion
	{
		get
		{
			return this._IsCurrentVersion;
		}
		set
		{
			if ((this._IsCurrentVersion != value))
			{
				this.OnIsCurrentVersionChanging(value);
				this.SendPropertyChanging();
				this._IsCurrentVersion = value;
				this.SendPropertyChanged("IsCurrentVersion");
				this.OnIsCurrentVersionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Profile> _aspnet_Profile;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Profile aspnet_Profile
	{
		get
		{
			return this._aspnet_Profile.Entity;
		}
		set
		{
			aspnet_Profile previousValue = this._aspnet_Profile.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Profile.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Profile.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Profile");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Users.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Users.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private System.Guid _RoleId;
	
	private EntityRef<aspnet_Role> _aspnet_Role;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
	
	public aspnet_UsersInRole()
	{
		this._aspnet_Role = default(EntityRef<aspnet_Role>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._aspnet_Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public aspnet_Role aspnet_Role
	{
		get
		{
			return this._aspnet_Role.Entity;
		}
		set
		{
			aspnet_Role previousValue = this._aspnet_Role.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Role.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_Role.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EventId;
	
	private System.DateTime _EventTimeUtc;
	
	private System.DateTime _EventTime;
	
	private string _EventType;
	
	private decimal _EventSequence;
	
	private decimal _EventOccurrence;
	
	private int _EventCode;
	
	private int _EventDetailCode;
	
	private string _Message;
	
	private string _ApplicationPath;
	
	private string _ApplicationVirtualPath;
	
	private string _MachineName;
	
	private string _RequestUrl;
	
	private string _ExceptionType;
	
	private string _Details;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
	
	public aspnet_WebEvent_Event()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
	public System.DateTime EventTimeUtc
	{
		get
		{
			return this._EventTimeUtc;
		}
		set
		{
			if ((this._EventTimeUtc != value))
			{
				this.OnEventTimeUtcChanging(value);
				this.SendPropertyChanging();
				this._EventTimeUtc = value;
				this.SendPropertyChanged("EventTimeUtc");
				this.OnEventTimeUtcChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
	public System.DateTime EventTime
	{
		get
		{
			return this._EventTime;
		}
		set
		{
			if ((this._EventTime != value))
			{
				this.OnEventTimeChanging(value);
				this.SendPropertyChanging();
				this._EventTime = value;
				this.SendPropertyChanged("EventTime");
				this.OnEventTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string EventType
	{
		get
		{
			return this._EventType;
		}
		set
		{
			if ((this._EventType != value))
			{
				this.OnEventTypeChanging(value);
				this.SendPropertyChanging();
				this._EventType = value;
				this.SendPropertyChanged("EventType");
				this.OnEventTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventSequence
	{
		get
		{
			return this._EventSequence;
		}
		set
		{
			if ((this._EventSequence != value))
			{
				this.OnEventSequenceChanging(value);
				this.SendPropertyChanging();
				this._EventSequence = value;
				this.SendPropertyChanged("EventSequence");
				this.OnEventSequenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventOccurrence
	{
		get
		{
			return this._EventOccurrence;
		}
		set
		{
			if ((this._EventOccurrence != value))
			{
				this.OnEventOccurrenceChanging(value);
				this.SendPropertyChanging();
				this._EventOccurrence = value;
				this.SendPropertyChanged("EventOccurrence");
				this.OnEventOccurrenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
	public int EventCode
	{
		get
		{
			return this._EventCode;
		}
		set
		{
			if ((this._EventCode != value))
			{
				this.OnEventCodeChanging(value);
				this.SendPropertyChanging();
				this._EventCode = value;
				this.SendPropertyChanged("EventCode");
				this.OnEventCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
	public int EventDetailCode
	{
		get
		{
			return this._EventDetailCode;
		}
		set
		{
			if ((this._EventDetailCode != value))
			{
				this.OnEventDetailCodeChanging(value);
				this.SendPropertyChanging();
				this._EventDetailCode = value;
				this.SendPropertyChanged("EventDetailCode");
				this.OnEventDetailCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
	public string ApplicationPath
	{
		get
		{
			return this._ApplicationPath;
		}
		set
		{
			if ((this._ApplicationPath != value))
			{
				this.OnApplicationPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationPath = value;
				this.SendPropertyChanged("ApplicationPath");
				this.OnApplicationPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
	public string ApplicationVirtualPath
	{
		get
		{
			return this._ApplicationVirtualPath;
		}
		set
		{
			if ((this._ApplicationVirtualPath != value))
			{
				this.OnApplicationVirtualPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationVirtualPath = value;
				this.SendPropertyChanged("ApplicationVirtualPath");
				this.OnApplicationVirtualPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string MachineName
	{
		get
		{
			return this._MachineName;
		}
		set
		{
			if ((this._MachineName != value))
			{
				this.OnMachineNameChanging(value);
				this.SendPropertyChanging();
				this._MachineName = value;
				this.SendPropertyChanged("MachineName");
				this.OnMachineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
	public string RequestUrl
	{
		get
		{
			return this._RequestUrl;
		}
		set
		{
			if ((this._RequestUrl != value))
			{
				this.OnRequestUrlChanging(value);
				this.SendPropertyChanging();
				this._RequestUrl = value;
				this.SendPropertyChanged("RequestUrl");
				this.OnRequestUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
	public string ExceptionType
	{
		get
		{
			return this._ExceptionType;
		}
		set
		{
			if ((this._ExceptionType != value))
			{
				this.OnExceptionTypeChanging(value);
				this.SendPropertyChanging();
				this._ExceptionType = value;
				this.SendPropertyChanged("ExceptionType");
				this.OnExceptionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BodyContents")]
public partial class BodyContent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _UserName;
	
	private string _WebsiteName;
	
	private System.Nullable<System.Guid> _UserId;
	
	private EntitySet<Page> _Pages;
	
	private EntitySet<SubPage> _SubPages;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnWebsiteNameChanging(string value);
    partial void OnWebsiteNameChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    #endregion
	
	public BodyContent()
	{
		this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
		this._SubPages = new EntitySet<SubPage>(new Action<SubPage>(this.attach_SubPages), new Action<SubPage>(this.detach_SubPages));
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteName", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string WebsiteName
	{
		get
		{
			return this._WebsiteName;
		}
		set
		{
			if ((this._WebsiteName != value))
			{
				this.OnWebsiteNameChanging(value);
				this.SendPropertyChanging();
				this._WebsiteName = value;
				this.SendPropertyChanged("WebsiteName");
				this.OnWebsiteNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_Membership.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BodyContent_Page", Storage="_Pages", ThisKey="WebsiteName", OtherKey="WebsiteName")]
	public EntitySet<Page> Pages
	{
		get
		{
			return this._Pages;
		}
		set
		{
			this._Pages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BodyContent_SubPage", Storage="_SubPages", ThisKey="WebsiteName", OtherKey="WebsiteName")]
	public EntitySet<SubPage> SubPages
	{
		get
		{
			return this._SubPages;
		}
		set
		{
			this._SubPages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_BodyContent", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.BodyContents.Remove(this);
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.BodyContents.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Pages(Page entity)
	{
		this.SendPropertyChanging();
		entity.BodyContent = this;
	}
	
	private void detach_Pages(Page entity)
	{
		this.SendPropertyChanging();
		entity.BodyContent = null;
	}
	
	private void attach_SubPages(SubPage entity)
	{
		this.SendPropertyChanging();
		entity.BodyContent = this;
	}
	
	private void detach_SubPages(SubPage entity)
	{
		this.SendPropertyChanging();
		entity.BodyContent = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _PageName;
	
	private string _PageContents;
	
	private System.Nullable<System.Guid> _UserId;
	
	private string _WebsiteName;
	
	private EntityRef<BodyContent> _BodyContent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnPageContentsChanging(string value);
    partial void OnPageContentsChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnWebsiteNameChanging(string value);
    partial void OnWebsiteNameChanged();
    #endregion
	
	public Page()
	{
		this._BodyContent = default(EntityRef<BodyContent>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="VarChar(100)")]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageContents", DbType="VarChar(MAX)")]
	public string PageContents
	{
		get
		{
			return this._PageContents;
		}
		set
		{
			if ((this._PageContents != value))
			{
				this.OnPageContentsChanging(value);
				this.SendPropertyChanging();
				this._PageContents = value;
				this.SendPropertyChanged("PageContents");
				this.OnPageContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteName", DbType="VarChar(200)")]
	public string WebsiteName
	{
		get
		{
			return this._WebsiteName;
		}
		set
		{
			if ((this._WebsiteName != value))
			{
				if (this._BodyContent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnWebsiteNameChanging(value);
				this.SendPropertyChanging();
				this._WebsiteName = value;
				this.SendPropertyChanged("WebsiteName");
				this.OnWebsiteNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BodyContent_Page", Storage="_BodyContent", ThisKey="WebsiteName", OtherKey="WebsiteName", IsForeignKey=true)]
	public BodyContent BodyContent
	{
		get
		{
			return this._BodyContent.Entity;
		}
		set
		{
			BodyContent previousValue = this._BodyContent.Entity;
			if (((previousValue != value) 
						|| (this._BodyContent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BodyContent.Entity = null;
					previousValue.Pages.Remove(this);
				}
				this._BodyContent.Entity = value;
				if ((value != null))
				{
					value.Pages.Add(this);
					this._WebsiteName = value.WebsiteName;
				}
				else
				{
					this._WebsiteName = default(string);
				}
				this.SendPropertyChanged("BodyContent");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubPages")]
public partial class SubPage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _userid;
	
	private string _UserName;
	
	private string _WebsiteName;
	
	private string _PageName;
	
	private int _id;
	
	private EntityRef<BodyContent> _BodyContent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(System.Guid value);
    partial void OnuseridChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnWebsiteNameChanging(string value);
    partial void OnWebsiteNameChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
	
	public SubPage()
	{
		this._BodyContent = default(EntityRef<BodyContent>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid userid
	{
		get
		{
			return this._userid;
		}
		set
		{
			if ((this._userid != value))
			{
				this.OnuseridChanging(value);
				this.SendPropertyChanging();
				this._userid = value;
				this.SendPropertyChanged("userid");
				this.OnuseridChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteName", DbType="VarChar(200)")]
	public string WebsiteName
	{
		get
		{
			return this._WebsiteName;
		}
		set
		{
			if ((this._WebsiteName != value))
			{
				if (this._BodyContent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnWebsiteNameChanging(value);
				this.SendPropertyChanging();
				this._WebsiteName = value;
				this.SendPropertyChanged("WebsiteName");
				this.OnWebsiteNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BodyContent_SubPage", Storage="_BodyContent", ThisKey="WebsiteName", OtherKey="WebsiteName", IsForeignKey=true)]
	public BodyContent BodyContent
	{
		get
		{
			return this._BodyContent.Entity;
		}
		set
		{
			BodyContent previousValue = this._BodyContent.Entity;
			if (((previousValue != value) 
						|| (this._BodyContent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BodyContent.Entity = null;
					previousValue.SubPages.Remove(this);
				}
				this._BodyContent.Entity = value;
				if ((value != null))
				{
					value.SubPages.Add(this);
					this._WebsiteName = value.WebsiteName;
				}
				else
				{
					this._WebsiteName = default(string);
				}
				this.SendPropertyChanged("BodyContent");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminProfile")]
public partial class AdminProfile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<System.Guid> _UserId;
	
	private string _Username;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _UserImgPath;
	
	private System.Nullable<System.DateTime> _Created;
	
	private System.Nullable<System.DateTime> _Updated;
	
	private string _UpdatedBy;
	
	private System.Nullable<bool> _Rejected;
	
	private string _Address;
	
	private string _City;
	
	private string _State;
	
	private string _Country;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserImgPathChanging(string value);
    partial void OnUserImgPathChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnRejectedChanging(System.Nullable<bool> value);
    partial void OnRejectedChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
	
	public AdminProfile()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_Membership.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImgPath", DbType="VarChar(100)")]
	public string UserImgPath
	{
		get
		{
			return this._UserImgPath;
		}
		set
		{
			if ((this._UserImgPath != value))
			{
				this.OnUserImgPathChanging(value);
				this.SendPropertyChanging();
				this._UserImgPath = value;
				this.SendPropertyChanged("UserImgPath");
				this.OnUserImgPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
	public System.Nullable<System.DateTime> Created
	{
		get
		{
			return this._Created;
		}
		set
		{
			if ((this._Created != value))
			{
				this.OnCreatedChanging(value);
				this.SendPropertyChanging();
				this._Created = value;
				this.SendPropertyChanged("Created");
				this.OnCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
	public System.Nullable<System.DateTime> Updated
	{
		get
		{
			return this._Updated;
		}
		set
		{
			if ((this._Updated != value))
			{
				this.OnUpdatedChanging(value);
				this.SendPropertyChanging();
				this._Updated = value;
				this.SendPropertyChanged("Updated");
				this.OnUpdatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(50)")]
	public string UpdatedBy
	{
		get
		{
			return this._UpdatedBy;
		}
		set
		{
			if ((this._UpdatedBy != value))
			{
				this.OnUpdatedByChanging(value);
				this.SendPropertyChanging();
				this._UpdatedBy = value;
				this.SendPropertyChanged("UpdatedBy");
				this.OnUpdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rejected", DbType="Bit")]
	public System.Nullable<bool> Rejected
	{
		get
		{
			return this._Rejected;
		}
		set
		{
			if ((this._Rejected != value))
			{
				this.OnRejectedChanging(value);
				this.SendPropertyChanging();
				this._Rejected = value;
				this.SendPropertyChanged("Rejected");
				this.OnRejectedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(100)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(100)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_AdminProfile", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.AdminProfiles.Remove(this);
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.AdminProfiles.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteUsers")]
public partial class SiteUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Username;
	
	private string _FirstName;
	
	private string _Lastname;
	
	private string _Email;
	
	private string _Address;
	
	private string _City;
	
	private string _State;
	
	private string _Country;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private string _CreatedBy;
	
	private System.Nullable<System.Guid> _CreatorId;
	
	private System.Nullable<bool> _IsRejected;
	
	private System.Nullable<bool> _IsDeleted;
	
	private System.Nullable<System.DateTime> _UpdatedOn;
	
	private string _Password;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreatorIdChanged();
    partial void OnIsRejectedChanging(System.Nullable<bool> value);
    partial void OnIsRejectedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public SiteUser()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(50)")]
	public string Lastname
	{
		get
		{
			return this._Lastname;
		}
		set
		{
			if ((this._Lastname != value))
			{
				this.OnLastnameChanging(value);
				this.SendPropertyChanging();
				this._Lastname = value;
				this.SendPropertyChanged("Lastname");
				this.OnLastnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
	public string CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> CreatorId
	{
		get
		{
			return this._CreatorId;
		}
		set
		{
			if ((this._CreatorId != value))
			{
				if (this._aspnet_Membership.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorIdChanging(value);
				this.SendPropertyChanging();
				this._CreatorId = value;
				this.SendPropertyChanged("CreatorId");
				this.OnCreatorIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRejected", DbType="Bit")]
	public System.Nullable<bool> IsRejected
	{
		get
		{
			return this._IsRejected;
		}
		set
		{
			if ((this._IsRejected != value))
			{
				this.OnIsRejectedChanging(value);
				this.SendPropertyChanging();
				this._IsRejected = value;
				this.SendPropertyChanged("IsRejected");
				this.OnIsRejectedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdatedOn
	{
		get
		{
			return this._UpdatedOn;
		}
		set
		{
			if ((this._UpdatedOn != value))
			{
				this.OnUpdatedOnChanging(value);
				this.SendPropertyChanging();
				this._UpdatedOn = value;
				this.SendPropertyChanged("UpdatedOn");
				this.OnUpdatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_SiteUser", Storage="_aspnet_Membership", ThisKey="CreatorId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.SiteUsers.Remove(this);
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.SiteUsers.Add(this);
					this._CreatorId = value.UserId;
				}
				else
				{
					this._CreatorId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivateUser")]
public partial class ActivateUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<System.Guid> _UserId;
	
	private System.Nullable<System.Guid> _ActivationKey;
	
	private System.Nullable<bool> _IsActivated;
	
	private System.Nullable<System.DateTime> _Created;
	
	private System.Nullable<bool> _IsExpired;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnActivationKeyChanging(System.Nullable<System.Guid> value);
    partial void OnActivationKeyChanged();
    partial void OnIsActivatedChanging(System.Nullable<bool> value);
    partial void OnIsActivatedChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnIsExpiredChanging(System.Nullable<bool> value);
    partial void OnIsExpiredChanged();
    #endregion
	
	public ActivateUser()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_Membership.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationKey", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> ActivationKey
	{
		get
		{
			return this._ActivationKey;
		}
		set
		{
			if ((this._ActivationKey != value))
			{
				this.OnActivationKeyChanging(value);
				this.SendPropertyChanging();
				this._ActivationKey = value;
				this.SendPropertyChanged("ActivationKey");
				this.OnActivationKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit")]
	public System.Nullable<bool> IsActivated
	{
		get
		{
			return this._IsActivated;
		}
		set
		{
			if ((this._IsActivated != value))
			{
				this.OnIsActivatedChanging(value);
				this.SendPropertyChanging();
				this._IsActivated = value;
				this.SendPropertyChanged("IsActivated");
				this.OnIsActivatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
	public System.Nullable<System.DateTime> Created
	{
		get
		{
			return this._Created;
		}
		set
		{
			if ((this._Created != value))
			{
				this.OnCreatedChanging(value);
				this.SendPropertyChanging();
				this._Created = value;
				this.SendPropertyChanged("Created");
				this.OnCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpired", DbType="Bit")]
	public System.Nullable<bool> IsExpired
	{
		get
		{
			return this._IsExpired;
		}
		set
		{
			if ((this._IsExpired != value))
			{
				this.OnIsExpiredChanging(value);
				this.SendPropertyChanging();
				this._IsExpired = value;
				this.SendPropertyChanged("IsExpired");
				this.OnIsExpiredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_ActivateUser", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.ActivateUsers.Remove(this);
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.ActivateUsers.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class proc_retrieve_second_rowResult
{
	
	private int _ID;
	
	private string _UserName;
	
	private string _LastLoginIP;
	
	private string _StartTime;
	
	private string _EndTime;
	
	private string _TimeDuration;
	
	private string _Date;
	
	private string _Email;
	
	public proc_retrieve_second_rowResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this._UserName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIP", DbType="VarChar(100)")]
	public string LastLoginIP
	{
		get
		{
			return this._LastLoginIP;
		}
		set
		{
			if ((this._LastLoginIP != value))
			{
				this._LastLoginIP = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(100)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this._StartTime = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(100)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this._EndTime = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="VarChar(100)")]
	public string TimeDuration
	{
		get
		{
			return this._TimeDuration;
		}
		set
		{
			if ((this._TimeDuration != value))
			{
				this._TimeDuration = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this._Date = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
}
#pragma warning restore 1591
